plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'formakara'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // Core Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Jakarta Validation (Bean Validation API)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Hibernate Validator (Jakarta Validation Implementation)
    implementation 'org.hibernate.validator:hibernate-validator:7.0.5.Final'

    // Jakarta Expression Language (required for Hibernate Validator)
    implementation 'org.glassfish:jakarta.el:4.0.2'

    // Jakarta XML Bind API and runtime (if needed for XML handling)
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'

    // Jackson library for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Java Faker library (for generating mock data)
    implementation('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // PostgreSQL Driver
    implementation 'org.postgresql:postgresql:42.6.0'


    // Spring Boot development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
}


tasks.named('test') {
	useJUnitPlatform()
}
